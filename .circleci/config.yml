version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: install virtual environment
          command: |
            python3 -m venv venv
      - run:
          name: upgrade pip
          command: |
            . venv/bin/activate
            pip install --upgrade pip
      - run:
          name: Install dependencies
          command: |
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: collectstatic
          command: |
            . venv/bin/activate
            django collectstatic
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Run Flake8
          command: |
            . venv/bin/activate
            flake8
      - run:
          name: Deployment checklist
          command: |
            . venv/bin/activate
            django check --deploy
      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            python3 manage.py test
      - run:
          name: Run coverage tests
          command: |
            . venv/bin/activate
            coverage run manage.py test
            coverage report
            coverage html
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results,
      - store_artifacts:
          path: htmlcov
  heroku-deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Deploy main branch to Heroku
          command: |
            curl https://cli-assets.heroku.com/install.sh | sudo sh
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku create $HEROKU_APP_NAME
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git main
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - heroku-deploy:
          filters:
            branches:
              only: main
          requires:
            - build
